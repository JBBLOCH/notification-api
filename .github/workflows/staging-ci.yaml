name: Staging CI

on:
  push:
    tags:
      - staging-v**
env:
  tf_version: 'latest'
  TF_LOG: INFO
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BACKEND_BUCKET: "va-notification-terraform-staging"
  BACKEND_REGION: "us-east-2"

jobs:
  create-base-infrastructure:
    runs-on: ubuntu-latest
    env:
      tf_working_dir: './cd/base-infrastructure'
    steps:
      - uses: actions/checkout@v2
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-backend-config="bucket=${{ env.BACKEND_BUCKET }}" -backend-config="key=base-infrastructure.tfstate" -backend-config="region=${{ env.BACKEND_REGION }}"'
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
        env:
          TF_CLI_ARGS: '-out=base-${{ github.sha }}.tfplan -var-file="staging.tfvars"'
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '"base-${{ github.sha }}.tfplan"'

  create-database:
    runs-on: ubuntu-latest
    needs: [create-base-infrastructure]
    env:
      tf_working_dir: './cd/application-database'
    steps:
      - uses: actions/checkout@v2
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-backend-config="bucket=${{ env.BACKEND_BUCKET }}" -backend-config="key=application-database.tfstate" -backend-config="region=${{ env.BACKEND_REGION }}"'
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
        env:
          TF_CLI_ARGS: '-out=database-${{ github.sha }}.tfplan -var-file="staging.tfvars"'
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '"database-${{ github.sha }}.tfplan"'

  create-app-infrastructure:
    runs-on: ubuntu-latest
    needs: [create-database]
    env:
      tf_working_dir: './cd/application-infrastructure'
    steps:
      - uses: actions/checkout@v2
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '-backend-config="bucket=${{ env.BACKEND_BUCKET }}" -backend-config="key=application-infrastructure.tfstate" -backend-config="region=${{ env.BACKEND_REGION }}"'
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
        env:
          TF_CLI_ARGS: '-var="app_tag=${{ github.sha }}" -out=application-${{ github.sha }}.tfplan -var-file="staging.tfvars"'
      - name: 'Terraform Apply'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: ${{ env.tf_version }}
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: ${{ env.tf_working_dir }}
          tf_actions_comment: false
          args: '"application-${{ github.sha }}.tfplan"'