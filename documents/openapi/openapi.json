{
  "openapi": "3.0.0",
  "info": {
    "title": "VA Notify API Documentation",
    "description": "This documents the API schemas for consumption by internal VA developers.",
    "version": "1.0.0",
    "contact": {
      "name": "VA Notify team"
    }
  },
  "servers": [
      {
        "url": "https://dev.api.twnotify.com/v2/notifications/"
      },
      {
        "url": "https://staging.api.twnotify.com/v2/notifications"
      }
    ],
  "components": {
    "schemas": {
      "OrganisationResponseCore": {
        "title": "OrganisationResponseCore",
        "type": "object",
        "properties": {
          "active": {
            "nullable": true,
            "type": "boolean"
          },
          "count_of_live_services": {
            "nullable": false,
            "type": "integer"
          },
          "domains": {
            "items": {
              "nullable": false,
              "type": "string"
            },
            "nullable": true,
            "type": "array"
          },
          "id": {
            "type": "string",
            "nullable": false,
            "format": "uuid"
          },
          "name": {
            "nullable": false,
            "type": "string"
          },
          "organisation_type": {
            "enum": [
              "other"
            ],
            "nullable": false,
            "type": "string"
          }
        }
      },
      "OrganisationResponse":{
        "title": "OrganisationResponse",
        "nullable": false,
        "allOf": [
          {"$ref": "#/components/schemas/OrganisationResponseCore"}
        ],
        "properties": {
          "agreement_signed": {
            "format": "datetime",
            "nullable": true,
            "type": "string"
          },
          "agreement_signed_at": {
            "format": "datetime",
            "nullable": true,
            "type": "string"
          },
          "agreement_signed_by_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "agreement_signed_on_behalf_of_email_address": {
            "nullable": true,
            "type": "string"
          },
          "agreement_signed_on_behalf_of_name": {
            "nullable": true,
            "type": "string"
          },
          "agreement_signed_version": {
            "nullable": false,
            "type": "number"
          },
          "crown": {
            "nullable": false,
            "type": "boolean"
          },
          "email_branding_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "letter_branding_id": {
            "format": "uuid",
            "nullable": true,
            "type": "string"
          },
          "request_to_go_live_notes": {
            "nullable": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "agreement_signed":  {
            "type": "boolean"
          },
          "agreement_signed_at":  {
            "type": "string"
          },
          "agreement_signed_by_id": {
            "type": "string"
          },
          "agreement_signed_on_behalf_of_email_address": {
            "type": "string"
          },
          "agreement_signed_on_behalf_of_name": {
            "type": "string"
          },
          "agreement_signed_version": {
            "type": "string"
          },
          "count_of_live_services": {
            "type": "integer"
          },
          "crown": {
            "type": "boolean"
          },
          "domains": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "email_branding_id": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "letter_branding_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organisation_type": {
            "type": "string"
          },
          "request_to_go_live_notes": {
            "type": "string"
          }
        }
      },
      "UserResponseItem": {
        "title": "UserResponseItem",
        "type": "object",
        "properties": {
          "additional_information": {
            "type": "object"
          },
          "auth_type": {
            "type": "string"
          },
          "blocked": {
            "type": "boolean"
          },
          "current_session_id": {
            "type": "string"
          },
          "email_address": {
            "type": "string"
          },
          "failed_login_count": {
            "type": "integer"
          },
          "id": {
            "type": "string"
          },
          "logged_in_at": {
            "type": "string"
          },
          "mobile_number":{
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "organisations": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "password_changed_at": {
            "type": "string"
          },
          "permissions": {
            "type": "object"
          },
          "platform_admin": {
            "type": "boolean"
          },
          "services": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "state": {
            "type": "boolean"
          }
        }
      },
      "UserResponseList": {
        "title": "UserResponseList",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UserResponseItem"
            }
          }
        }
      },
      "ServiceResponseCore": {
        "title": "ServiceResponseCore",
        "type": "object",
        "properties": {
          "active": {"type": "boolean"},
          "all_template_folders": {"type": "array", "items": {"type": "string"}},
          "annual_billing": {"type": "array", "items": {"type": "string", "format": "uuid"}},
          "consent_to_research": {"type": "boolean"},
          "contact_link": {"type": "string"},
          "count_as_live": {"type": "boolean"},
          "created_by": {"type": "string", "format": "uuid"},
          "crown": {"type": "boolean"},
          "email_branding": {"type": "string", "format": "uuid"},
          "email_from": {"type": "string", "format": "local part of email address"},
          "go_live_at": {"type": "string", "format": "datetime"},
          "go_live_user": {"type": "string", "format": "user uuid"},
          "id": {"type": "string", "format": "serivce uuid"},
          "inbound_api": {"type": "array", "items": {"type": "string", "format": "url"}},
          "inbound_number": {"type": "number"},
          "inbound_sms": {"type": "array", "items": {"type": "string", "format": "uuid"}},
          "letter_branding": {"type": "string", "format": "uuid"},
          "letter_contact_block": {"type": "string"},
          "letter_logo_filename": {"type": "string"},
          "message_limit": {"type": "number"},
          "name": {"type": "string"},
          "organisation": {"type": "string", "format": "organisation uuid"},
          "organisation_type": {
            "type": "string",
            "nullable": true,
            "enum": ["other"]
          },
          "permissions": {
            "type": "array", 
            "items": {
              "type": "string", 
              "enum": ["international_sms","email","sms"]
              }
          },
          "prefix_sms": {"type": "boolean"},
          "rate_limit": {"type": "number"},
          "research_mode": {"type": "boolean"},
          "restricted": {"type": "boolean"},
          "sending_domain": {"type": "string", "nullable": true},
          "service_callback_api": {"type": "array", "items": {"type": "string"}},
          "service_data_retention": {"type": "array", "items": {"type": "string"}},
          "smtp_user": {"type": "string"},
          "users": {"type": "array", "items": {"type": "string", "format": "user uuid"}},
          "version": {"type": "number"},
          "volume_email": {"type": "integer", "nullable": true},
          "volume_letter": {"type": "integer", "nullable": true},
          "volume_sms": {"type": "integer", "nullable": true},
          "whitelist": {
            "type": "array", 
            "items": {
              "properties": {
                "email_addresses": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "phone_numbers": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "ServiceResponseItem":{
        "title": "ServiceResponseItem",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/ServiceResponseCore"
          }
        }
      },
      "ServiceResponseList": {
        "title": "ServiceResponseList",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref":"#/components/schemas/ServiceResponseCore"
            }
          }
        }
      },
      "Template": {
        "description": "payload for POST /service/<uuid:service_id>/template",
        "nullable": false,
        "properties": {
          "content": {
            "nullable": false,
            "type": "string"
          },
          "created_by": {
            "format": "uuid",
            "nullable": false,
            "type": "string"
          },
          "name": {
            "nullable": false,
            "type": "string"
          },
          "parent_folder_id": {
            "format": "uuid",
            "nullable": false,
            "type": "string"
          },
          "postage": {
            "nullable": false,
            "type": "string"
          },
          "process_type": {
            "type": "string",
            "enum": [
              "normal",
              "priority"
            ]
          },
          "service": {
            "format": "uuid",
            "nullable": false,
            "type": "string"
          },
          "subject": {
            "nullable": false,
            "type": "string"
          },
          "template_type": {
            "type": "string",
            "enum": [
              "sms",
              "email",
              "letter"
            ]
          }
        },
        "required": [
          "name",
          "template_type",
          "content",
          "service",
          "created_by"
        ],
        "title": "Template",
        "type": "object"
      },
      "SMSTemplateRequest": {
        "title": "SMSTemplateRequest",
        "description": "POST /service/<uuid:service_id>/template",
        "nullable": false,
        "allOf": [
          {"$ref": "#/components/schemas/Template"}
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          }
        }
      },
      "EmailOrLetterTemplateRequest": {
        "title": "EmailOrLetterTemplateRequest",
        "description": "payload for POST /service/<uuid:service_id>/template",
        "nullable": false,
        "allOf": [
          {"$ref": "#/components/schemas/Template"}
        ],
        "type": "object",
        "required": ["subject"],
        "properties": {
          "subject": {
            "type": "string"
          }
        }
      },
      "TemplateResponseCore": {
        "title": "TemplateResponseCore",
        "type": "object",
        "allOf": [
          {"$ref": "#/components/schemas/Template"}
        ],
        "properties": {
          "archived": {"type": "boolean"},
          "created_at": {
            "type": "string",
            "format": "datetime"
          },
          "created_by": {
            "type": "string",
            "format": "datetime"
          },
          "folder": {"type": "?"},
          "hidden": {"type": "boolean"},
          "id": {"type": "string", "format": "uuid"},
          "postage": {
            "type": "string"
          },
          "redact_personalisation": {
            "type": "boolean"
          },
          "reply_to": {
            "type": "string",
            "format": "uuid"
          },
          "reply_to_text": {
            "type": "string"
          },
          "service_letter_contact": {
            "type": "string",
            "format": "uuid"
          },
          "template_redacted": {
            "type": "string",
            "format": "uuid"
          },
          "updated_at": {
            "type": "string",
            "format": "datetime"
          },
          "version": {
            "type": "number"
          }
        }
      },
      "TemplateResponseItem": {
        "title": "TemplateResponseItem",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "$ref": "#/components/schemas/TemplateResponseCore"
          }
        }
      },
      "TemplateResponseList": {
        "title": "TemplateResponseList",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplateResponseCore"
            }
          }
        }
      }
    },
    "examples": {
      "UserResponseItem": {
        "description": "Example response payload for single user",
        "value": {
          "data": {
            "additional_information": {},
            "auth_type": "sms_auth",
            "blocked": false,
            "current_session_id": null,
            "email_address": "foo@bar.test",
            "failed_login_count": 0,
            "id": "40073d95-2659-45e4-8b63-063b5d56a4f2",
            "logged_in_at": null,
            "mobile_number": "+10123456789",
            "name": "Test User",
            "organisations": [],
            "password_changed_at": "2020-07-29 07:05:56.109160",
            "permissions": {},
            "platform_admin": false,
            "services": [],
            "state": "active"
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  },
  "paths": {
    "/organisations": {
      "get": {
        "tags": [
          "organisation"
        ],
        "description": "GET all organisations",
        "responses": {
          "200": {
            "description": "A list of organisations with available details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrganisationResponseCore"
                  }
                },
                "examples": {
                  "organisations": {
                    "summary": "Example response payoad for GET organisations",
                    "value": [
                      {
                        "active": true,
                        "count_of_live_services": 0,
                        "domains": [],
                        "id": "z097b97c-0f34-4509-bef4-54600c7dccef",
                        "name": "test org",
                        "organisation_type": "other"
                      },
                      {
                        "active": true,
                        "count_of_live_services": 1,
                        "domains": [],
                        "id": "z0230865-ee5b-4203-8873-5db7c1c0e55c",
                        "name": "va.gov",
                        "organisation_type": "other"
                      },
                      {
                        "active": true,
                        "count_of_live_services": 0,
                        "domains": [],
                        "id": "z023f598-dc49-410c-b97d-6388e8438fc4",
                        "name": "api test",
                        "organisation_type": "other"
                      }
                    ]
                  } 
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "organisation"
        ],
        "description": "POST organisations",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "active": {
                    "nullable": true,
                    "type": "boolean"
                  },
                  "crown": {
                    "nullable": false,
                    "type": "boolean"
                  },
                  "name": {
                    "nullable": false,
                    "type": "string"
                  },
                  "organisation_type": {
                    "type": "string",
                    "enum": [
                      "other"
                    ]
                  }
                },
                "required": [
                  "active",
                  "crown",
                  "name",
                  "organisation_type"
                ],
                "type": "object"
              },
              "examples": {
                "organisation": {
                  "summary": "Example request body POST organisations",
                  "value": {
                    "name": "test org name",
                    "active": true,
                    "organisation_type": "other",
                    "crown": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "POST organisation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationResponse"
                },
                "examples": {
                  "organisation": {
                    "summary": "Example response payload for POST organisation",
                    "value": {
                      "active": true,
                      "agreement_signed": null,
                      "agreement_signed_at": null,
                      "agreement_signed_by_id": null,
                      "agreement_signed_on_behalf_of_email_address": null,
                      "agreement_signed_on_behalf_of_name": null,
                      "agreement_signed_version": null,
                      "count_of_live_services": 0,
                      "crown": false,
                      "domains": [],
                      "email_branding_id": null,
                      "id": "zdbf392a7-04da-4a18-b6bf-2fcb3e4c94f9",
                      "letter_branding_id": null,
                      "name": "test org name",
                      "organisation_type": "other",
                      "request_to_go_live_notes": null
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags":[
          "user"
        ],
        "description": "POST user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "email_address": {
                    "type": "string"
                  },
                  "mobile_number": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "user_permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "auth_type": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "response POST user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/UserResponseItem"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "get": {
        "tags":[
          "user"
        ],
        "description": "GET users",
        "responses": {
          "200": {
            "description": "response GET users",
            "content": {
              "application/json": {
               "schema": {
                 "type": "object",
                 "allOf": [
                   {
                     "$ref": "#/components/schemas/UserResponseList",
                   }
                 ]
               }
              }
            }
          }
        }
      }
    },
    "/service": {
      "post": {
        "tags": [
          "service"
        ],
        "description": "POST service",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "active": {
                    "nullable": true,
                    "type": "boolean"
                  },
                  "created_by": {
                    "format": "user uuid",
                    "nullable": false,
                    "type": "string"
                  },
                  "email-from": {
                    "format": "local part of email address",
                    "nullable": false,
                    "type": "string"
                  },
                  "message_limit": {
                    "format": "uuid",
                    "nullable": true,
                    "type": "integer"
                  },
                  "name": {
                    "nullable": false,
                    "type": "string"
                  },
                  "organisation_id": {
                    "format": "uuid",
                    "nullable": true,
                    "type": "string"
                  },
                  "restricted": {
                    "nullable": false,
                    "type": "boolean"
                  },
                  "user_id": {
                    "format": "uuid",
                    "nullable": false,
                    "type": "string"
                  }
                },
                "required": [
                  "active",
                  "created_by",
                  "email-from",
                  "message_limit",
                  "name",
                  "organisation_id",
                  "restricted",
                  "user_id"
                ],
                "type": "object"
              },
              "examples": {
                "service": {
                  "summary": "Example request body POST service",
                  "value": {
                    "name": "service for VA Notify",
                    "user_id": "{{user-id}}",
                    "organisation_id": "{{organization-id}}",
                    "message_limit": 1000,
                    "restricted": false,
                    "active": true,
                    "email-from": "permitted-local-part",
                    "created_by": "{{user-id}}"
                }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "POST service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ServiceResponseItem"
                },
                "examples": {
                  "service": {
                    "summary": "example response POST service",
                    "value": {
                      "data": {
                        "active": true,
                        "all_template_folders": [],
                        "annual_billing": [],
                        "consent_to_research": null,
                        "contact_link": null,
                        "count_as_live": true,
                        "created_by": "z1f2aa83-082c-4cdf-ac54-7d25b28058c1",
                        "crown": null,
                        "email_branding": null,
                        "email_from": "someemail1",
                        "go_live_at": null,
                        "go_live_user": null,
                        "id": "zdfd949a-729d-4de2-8888-fc5f97ca5996",
                        "inbound_api": [],
                        "inbound_number": null,
                        "inbound_sms":  ["z58431fe-9186-4d60-b539-4207e4fe5524"],
                        "letter_branding": null,
                        "letter_contact_block": null,
                        "letter_logo_filename": null,
                        "message_limit": 1000,
                        "name": "main service for Govdelivery",
                        "organisation": "ze97b97c-0f34-4509-bef4-54600c7dccef",
                        "organisation_type": null,
                        "permissions": [
                          "international_sms",
                          "email",
                          "sms"
                        ],
                        "prefix_sms": true,
                        "rate_limit": 3000,
                        "research_mode": false,
                        "restricted": false,
                        "sending_domain": null,
                        "service_callback_api": [],
                        "service_data_retention": [],
                        "smtp_user": null,
                        "users": [
                          "z1f2aa83-082c-4cdf-ac54-7d25b28058c1"
                        ],
                        "version": 1,
                        "volume_email": null,
                        "volume_letter": null,
                        "volume_sms": null,
                        "whitelist": []
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "service"
        ],
        "description": "GET service",
        "responses": {
          "200": {
            "description": "GET service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/ServiceResponseList"
                }
              }
            }
          }
        }
      }
    },
    "/service/{uuid:service_id}/template": {
      "get": {
        "tags": [
          "service template"
        ],
        "description": "GET templates for service",
        "parameters": [
          {
            "in": "path",
            "name": "uuid:service_id",
            "schema": {
              "type": "integer",
              "format": "uuid"
            },
            "required": true,
            "allowEmptyValue": false,
            "description": "service_id to create service template"
          }
        ],
        "responses": {
          "200": {
            "description": "response for GET templates for service",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/TemplateResponseList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "service template"
        ],
        "description": "POST template",
        "parameters":[
          {
            "in": "path",
            "name": "uuid:service_id",
            "schema": {
              "type": "integer",
              "format": "uuid"
            },
            "required": true,
            "allowEmptyValue": false,
            "description": "service_id to create service template"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/SMSTemplateRequest"},
                  { "$ref": "#/components/schemas/EmailOrLetterTemplateRequest"},
                ]
              },
              "examples": {
                "template": {
                  "summary": "request POST email template",
                  "value": {
                    "name": "test template",
                    "subject": "test subject",
                    "template_type": "email",
                    "content": "This is a test email",
                    "service": "{{service-id}}",
                    "created_by": "{{user-id}}"
                }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "response for POST template",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/TemplateResponseItem"
                },
                "examples": {
                  "template": {
                    "summary": "response POST email template",
                    "value": {
                      "data": {
                        "archived": false,
                        "content": "Test email content",
                        "created_at": "2020-07-29T19:34:00.236736+00:00",
                        "created_by": "40073d95-2659-45e4-8b63-063b5d56a4f2",
                        "folder": null,
                        "hidden": false,
                        "id": "b80d4d09-dd63-438c-9b35-2c4f6aa5def7",
                        "name": "test template",
                        "postage": null,
                        "process_type": "normal",
                        "redact_personalisation": false,
                        "reply_to": null,
                        "reply_to_text": null,
                        "service": "1c8009cb-b067-4de5-ac31-ddf8df95d9b9",
                        "service_letter_contact": null,
                        "subject": "test subject",
                        "template_redacted": "b80d4d09-dd63-438c-9b35-2c4f6aa5def7",
                        "template_type": "email",
                        "updated_at": null,
                        "version": 1
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/service/{uuid:service_id}/template/{uuid:template_id}": {
      "post": {
        "tags": [
          "service template"
        ],
        "description": "POST update specific service template",
        "parameters":[
          {
            "in": "path",
            "name": "uuid:service_id",
            "schema": {
              "type": "integer",
              "format": "uuid"
            },
            "required": true,
            "allowEmptyValue": false,
            "description": "service_id to create service template"
          },
          {
            "in": "path",
            "name": "uuid:template_id",
            "schema": {
              "type": "integer",
              "format": "uuid"
            },
            "required": true,
            "allowEmptyValue": false,
            "description": "template_id to update specific service template"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  { "$ref": "#/components/schemas/SMSTemplateRequest"},
                  { "$ref": "#/components/schemas/EmailOrLetterTemplateRequest"},
                ]
              },
              "examples": {
                "template": {
                  "summary": "request POST update service email template",
                  "value": {
                    "name": "test update service template",
                    "subject": "test subject",
                    "template_type": "email",
                    "content": "test update service template",
                    "service": "{{service-id}}",
                    "created_by": "{{user-id}}"
                }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "response for POST update service template",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/TemplateResponseItem"
                },
                "examples": {
                  "template": {
                    "summary": "response POST update service email template",
                    "value": {
                      "data": {
                        "archived": false,
                        "content": "Test email content",
                        "created_at": "2020-07-29T19:34:00.236736+00:00",
                        "created_by": "40073d95-2659-45e4-8b63-063b5d56a4f2",
                        "folder": null,
                        "hidden": false,
                        "id": "b80d4d09-dd63-438c-9b35-2c4f6aa5def7",
                        "name": "test update service template",
                        "postage": null,
                        "process_type": "normal",
                        "redact_personalisation": false,
                        "reply_to": null,
                        "reply_to_text": null,
                        "service": "1c8009cb-b067-4de5-ac31-ddf8df95d9b9",
                        "service_letter_contact": null,
                        "subject": "test subject",
                        "template_redacted": "b80d4d09-dd63-438c-9b35-2c4f6aa5def7",
                        "template_type": "email",
                        "updated_at": null,
                        "version": 2
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
